* description
The main point of this research were desire to play raw sound via writing data directly to device (/dev/audio).

After small research some links on stackoverflow were found and I start to digging into raw audio data:
- write my raw audio data generator ([[file:music.py][music.py]]) which can play notes and some noisy sin waves
- start writing my own sequencer ([[file:sequencer.py][sequencer.py]]). The main purpose of this sequencer were research how samples are comdining

The main mind-blowing fact is that audio is just frequency and volume -- there is nothing also in general about it.

* play raw
1. get m4a file
2. ffmpeg -i <M4A_FILE> -ar 8000 -ac 1 -c:a pcm_u8 -f u8 music.raw
3. cat music.raw | padsp tee /dev/audio > /dev/null
[[https://unix.stackexchange.com/questions/13732/generating-random-noise-for-fun-in-dev-snd][about 3rd]]
[[https://unix.stackexchange.com/questions/17828/output-sound-by-writing-to-dev-dsp][about 2nd]]

** questions v1
- what is m4a file
- is music.raw is just sequence of samples?
- can it be done with more basic tools? with not pulseaudio (as wrapper around ALSA), but directly with ALSA?

- m4a is just container format. Nothing interesting
- yes
- sure you can do it, but does it worth it for now?

** question v2
- how to play multiple notes simualteneously? What's the formula for sample value then? Doesn't looks like that the formula is just average value
- sin wave sound

- [[https://stackoverflow.com/questions/19847601/how-do-i-combine-digital-audio][combining audio]]
- sin wave is brilliant. really like implementing it. especially weow-weow sound
